name: Deploy buy runner

on:
  push:
    branches: [ "WebHook" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "BITRIX_CLIENT_ID=${{ secrets.BITRIX_CLIENT_ID }}" >> .env
          echo "BITRIX_SECRET=${{ secrets.BITRIX_SECRET }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "IPGEOLOCATION_API=${{ secrets.IPGEOLOCATION_API }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "SERVER_IP=${{ secrets.SERVER_IP }}" >> .env
          echo "SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}" >> .env
          echo "TELEGRAM_BOT_OWNER_ID=${{ secrets.TELEGRAM_BOT_OWNER_ID }}" >> .env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
          echo "TELEGRAM_WEBHOOK_PATH=${{ secrets.TELEGRAM_WEBHOOK_PATH }}" >> .env
          echo "YANDEX_CLIENT_ID=${{ secrets.YANDEX_CLIENT_ID }}" >> .env
          echo "YCLIENTS_APPLICATION_ID=${{ secrets.YCLIENTS_APPLICATION_ID }}" >> .env
          echo "YCLIENTS_BEARER=${{ secrets.YCLIENTS_BEARER }}" >> .env
          echo "YCLIENTS_USER_TOKEN=${{ secrets.YCLIENTS_USER_TOKEN }}" >> .env

      - name: set up Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: maven

      - name: Build JAR
        run: mvn package
      - name: Save JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: target/AdMetricsBot-1.jar

      - name: Archive .env file
        uses: actions/upload-artifact@v3
        with:
          name: env-file
          path: .env

  cleanup:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Stop and remove container
        run: |
          docker stop admetricsbot
      - name: Remove container
        run: docker system prune -a -f

  deploy:
    runs-on: self-hosted
    needs: cleanup
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: app-jar
      - name: Download .env artifact
        uses: actions/download-artifact@v3
        with:
          name: env-file
      - name: Deploy
        run: |
          cp $GITHUB_WORKSPACE/.env /app/
          cp $GITHUB_WORKSPACE/AdMetricsBot-1.jar /app/
          cd /app/
          docker-compose up -d
      - name: Remove unused data
        run: docker system prune -a -f